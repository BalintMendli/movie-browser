{"version":3,"sources":["components/TabComps/Reviews.js"],"names":["Reviews","data","reviews","results","length","map","x","Fragment","key","id","className","author","whiteSpace","content","hr"],"mappings":"6HAAA,wCAwBeA,UAnBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OAAKA,EAAKC,QAAQC,QAAQC,OAGnBH,EAAKC,QAAQC,QAAQE,KAAI,SAAAC,GAAC,OAC/B,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAAEG,IACrB,6BACE,wBAAIC,UAAU,aAAd,sBAA0CJ,EAAEK,SAC5C,uBAAGD,UAAWE,cAAaN,EAAEO,UAE/B,wBAAIH,UAAWI,WARV","file":"static/js/4.7acbb899.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hr, whiteSpace } from '../Style/style.module.css';\nimport { movieType, tvType } from '../types';\n\nconst Reviews = ({ data }) => {\n  if (!data.reviews.results.length) {\n    return <div>No reviews yet...</div>;\n  }\n  return data.reviews.results.map(x => (\n    <React.Fragment key={x.id}>\n      <div>\n        <h4 className=\"mt-4 mb-3\">{`A review by ${x.author}`}</h4>\n        <p className={whiteSpace}>{x.content}</p>\n      </div>\n      <hr className={hr} />\n    </React.Fragment>\n  ));\n};\n\nReviews.propTypes = {\n  data: PropTypes.oneOfType([movieType, tvType]).isRequired,\n};\n\nexport default Reviews;\n"],"sourceRoot":""}