{"version":3,"sources":["components/TabComps/Overview.js"],"names":["Overview","data","type","name","also_known_as","map","join","gender","birthday","place_of_birth","deathday","homepage","href","target","rel","genres","genre","created_by","creator","overview","episode_run_time","first_air_date","production_companies","comp","className","icon","vote_average","style","fontSize","fontWeight","vote_count","release_date","runtime","budget","Intl","NumberFormat","currency","format","revenue"],"mappings":"6HAAA,wCAqIeA,UAhIE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACxB,MAAa,WAATA,EAEA,oCACE,oCACA,2BAAID,EAAKE,MACT,6CACA,2BAAIF,EAAKG,cAAcC,KAAI,SAAAF,GAAI,OAAIA,KAAMG,KAAK,OAC9C,sCACA,2BAAoB,IAAhBL,EAAKM,OAAe,SAA2B,IAAhBN,EAAKM,OAAe,OAAS,KAChE,wCACA,2BAAIN,EAAKO,UACT,8CACA,2BAAIP,EAAKQ,gBACRR,EAAKS,UACJ,oCACE,oCACA,2BAAIT,EAAKS,WAGZT,EAAKU,UACJ,oCACE,6CACA,2BACE,uBAAGC,KAAMX,EAAKU,SAAUE,OAAO,SAASC,IAAI,uBACzCb,EAAKU,aASP,OAATT,EAEA,oCACE,qCACA,2BAAID,EAAKc,OAAOV,KAAI,SAAAW,GAAK,OAAIA,EAAMb,QAAMG,KAAK,OAC9C,0CACA,2BAAIL,EAAKgB,WAAWZ,KAAI,SAAAa,GAAO,OAAIA,EAAQf,QAAMG,KAAK,OACtD,uCACA,2BAAIL,EAAKkB,UACT,+CACA,qCAAOlB,EAAKmB,iBAAiB,GAA7B,SACA,8CACA,2BAAInB,EAAKoB,gBACT,gDACA,2BACGpB,EAAKU,SACJ,uBAAGC,KAAMX,EAAKU,SAAUE,OAAO,SAASC,IAAI,uBACzCb,EAAKU,UAGR,KAGJ,oDACA,2BAAIV,EAAKqB,qBAAqBjB,KAAI,SAAAkB,GAAI,OAAIA,EAAKpB,QAAMG,KAAK,OAC1D,sCACA,uBAAGkB,UAAU,8BACX,kBAAC,IAAD,CAAIC,KAAK,OAAOD,UAAU,oBACzBvB,EAAKyB,aACN,0BAAMC,MAAO,CAAEC,SAAU,OAAQC,WAAY,WAA7C,eACW5B,EAAK6B,WADhB,QASN,oCACE,qCACA,2BAAI7B,EAAKc,OAAOV,KAAI,SAAAW,GAAK,OAAIA,EAAMb,QAAMG,KAAK,OAC9C,4CACA,2BAAIL,EAAK8B,cACT,uCACA,qCAAO9B,EAAK+B,QAAZ,SACA,uCACA,2BAAI/B,EAAKkB,UACT,gDACA,2BACGlB,EAAKU,SACJ,uBAAGC,KAAMX,EAAKU,SAAUE,OAAO,SAASC,IAAI,uBACzCb,EAAKU,UAGR,KAGJ,oDACA,2BAAIV,EAAKqB,qBAAqBjB,KAAI,SAAAkB,GAAI,OAAIA,EAAKpB,QAAMG,KAAK,OAC1D,sCACA,2BACGL,EAAKgC,OACF,IAAIC,KAAKC,aAAa,QAAS,CAC7BR,MAAO,WACPS,SAAU,QACTC,OAAOpC,EAAKgC,QACf,WAEN,uCACA,2BACGhC,EAAKqC,QACF,IAAIJ,KAAKC,aAAa,QAAS,CAC7BR,MAAO,WACPS,SAAU,QACTC,OAAOpC,EAAKqC,SACf,WAEN,sCACA,uBAAGd,UAAU,8BACX,kBAAC,IAAD,CAAIC,KAAK,OAAOD,UAAU,oBACzBvB,EAAKyB,aACN,0BAAMC,MAAO,CAAEC,SAAU,OAAQC,WAAY,WAA7C,eACW5B,EAAK6B,WADhB","file":"static/js/3.fa43437a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fa } from 'mdbreact';\nimport { movieType, tvType, personType } from '../types';\n\nconst Overview = ({ data, type }) => {\n  if (type === 'person') {\n    return (\n      <>\n        <h4>Name</h4>\n        <p>{data.name}</p>\n        <h4>Also Known As</h4>\n        <p>{data.also_known_as.map(name => name).join(', ')}</p>\n        <h4>Gender</h4>\n        <p>{data.gender === 1 ? 'Female' : data.gender === 2 ? 'Male' : '-'}</p>\n        <h4>Birthday</h4>\n        <p>{data.birthday}</p>\n        <h4>Place of Birth</h4>\n        <p>{data.place_of_birth}</p>\n        {data.deathday && (\n          <>\n            <h4>Died</h4>\n            <p>{data.deathday}</p>\n          </>\n        )}\n        {data.homepage && (\n          <>\n            <h4>Official Site</h4>\n            <p>\n              <a href={data.homepage} target=\"_blank\" rel=\"noreferrer noopener\">\n                {data.homepage}\n              </a>\n            </p>\n          </>\n        )}\n      </>\n    );\n  }\n\n  if (type === 'tv') {\n    return (\n      <>\n        <h4>Genre</h4>\n        <p>{data.genres.map(genre => genre.name).join(', ')}</p>\n        <h4>Created By</h4>\n        <p>{data.created_by.map(creator => creator.name).join(', ')}</p>\n        <h4>Summary</h4>\n        <p>{data.overview}</p>\n        <h4>Episode Runtime</h4>\n        <p>{`${data.episode_run_time[0]} min`}</p>\n        <h4>First Air Date</h4>\n        <p>{data.first_air_date}</p>\n        <h4>Official Website</h4>\n        <p>\n          {data.homepage ? (\n            <a href={data.homepage} target=\"_blank\" rel=\"noreferrer noopener\">\n              {data.homepage}\n            </a>\n          ) : (\n            '-'\n          )}\n        </p>\n        <h4>Production Companies</h4>\n        <p>{data.production_companies.map(comp => comp.name).join(', ')}</p>\n        <h4>Rating</h4>\n        <p className=\"text-left font-weight-bold\">\n          <Fa icon=\"star\" className=\"amber-text pr-1\" />\n          {data.vote_average}\n          <span style={{ fontSize: '12px', fontWeight: 'normal' }}>\n            {`/10 (${data.vote_count})`}\n          </span>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h4>Genre</h4>\n      <p>{data.genres.map(genre => genre.name).join(', ')}</p>\n      <h4>Release Date</h4>\n      <p>{data.release_date}</p>\n      <h4>Runtime</h4>\n      <p>{`${data.runtime} min`}</p>\n      <h4>Summary</h4>\n      <p>{data.overview}</p>\n      <h4>Official Website</h4>\n      <p>\n        {data.homepage ? (\n          <a href={data.homepage} target=\"_blank\" rel=\"noreferrer noopener\">\n            {data.homepage}\n          </a>\n        ) : (\n          '-'\n        )}\n      </p>\n      <h4>Production Companies</h4>\n      <p>{data.production_companies.map(comp => comp.name).join(', ')}</p>\n      <h4>Budget</h4>\n      <p>\n        {data.budget\n          ? new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD',\n            }).format(data.budget)\n          : 'No data'}\n      </p>\n      <h4>Revenue</h4>\n      <p>\n        {data.revenue\n          ? new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD',\n            }).format(data.revenue)\n          : 'No data'}\n      </p>\n      <h4>Rating</h4>\n      <p className=\"text-left font-weight-bold\">\n        <Fa icon=\"star\" className=\"amber-text pr-1\" />\n        {data.vote_average}\n        <span style={{ fontSize: '12px', fontWeight: 'normal' }}>\n          {`/10 (${data.vote_count})`}\n        </span>\n      </p>\n    </>\n  );\n};\n\nOverview.propTypes = {\n  type: PropTypes.oneOf(['movie', 'tv', 'person']).isRequired,\n  data: PropTypes.oneOfType([movieType, tvType, personType]).isRequired,\n};\n\nexport default Overview;\n"],"sourceRoot":""}